<#
Code generated by Microsoft (R) PSSwagger 0.3.0
Changes may cause incorrect behavior and will be lost if the code is regenerated.
#>

<#
.SYNOPSIS
    The peering class.

.DESCRIPTION
    The peering class.

.PARAMETER Partner
    Gets or sets the peering carrier properties.

.PARAMETER Tags
    Gets or sets the tags.

.PARAMETER Type
    Gets or sets the resource type.

.PARAMETER PeeringState
    Gets or sets the peering state.

.PARAMETER Name
    Gets or sets the resource name.

.PARAMETER PeeringLocation
    Gets or sets the peering location.

.PARAMETER ETag
    Gets or sets the entity tag.

.PARAMETER Direct
    Gets or sets the peering direct properties.

.PARAMETER Kind
    Gets or sets the kind.

.PARAMETER ProvisioningState
    Gets or sets the provisioning state.

.PARAMETER Id
    Gets or sets the resource id.

.PARAMETER Location
    Gets or sets the location.

.PARAMETER Exchange
    Gets or sets the peering exchange properties.

.PARAMETER Sku
    Gets or sets the SKU.

#>
function New-PeeringObject
{
    param(    
        [Parameter(Mandatory = $false)]
        [Microsoft.PowerShell.AzPeering.v001.Models.PeeringPropertiesPartner]
        $Partner,
    
        [Parameter(Mandatory = $false)]
        [System.Collections.Generic.Dictionary[[string],[string]]]
        $Tags,
    
        [Parameter(Mandatory = $false)]
        [string]
        $Type,
    
        [Parameter(Mandatory = $false)]
        [ValidateSet('None', 'Active', 'PendingAdd', 'PendingUpdate', 'PendingConversion', 'PendingRemove', 'ProvisioningStarted', 'ProvisioningCompleted', 'ProvisioningFailed', 'Removed', 'CarrierApproved')]
        [string]
        $PeeringState,
    
        [Parameter(Mandatory = $false)]
        [string]
        $Name,
    
        [Parameter(Mandatory = $false)]
        [string]
        $PeeringLocation,
    
        [Parameter(Mandatory = $false)]
        [string]
        $ETag,
    
        [Parameter(Mandatory = $false)]
        [Microsoft.PowerShell.AzPeering.v001.Models.PeeringPropertiesDirect]
        $Direct,
    
        [Parameter(Mandatory = $false)]
        [ValidateSet('Direct', 'Exchange', 'Partner')]
        [string]
        $Kind,
    
        [Parameter(Mandatory = $false)]
        [ValidateSet('Succeeded', 'Updating', 'Deleting', 'Failed')]
        [string]
        $ProvisioningState,
    
        [Parameter(Mandatory = $false)]
        [string]
        $Id,
    
        [Parameter(Mandatory = $false)]
        [string]
        $Location,
    
        [Parameter(Mandatory = $false)]
        [Microsoft.PowerShell.AzPeering.v001.Models.PeeringPropertiesExchange]
        $Exchange,
    
        [Parameter(Mandatory = $false)]
        [Microsoft.PowerShell.AzPeering.v001.Models.PeeringSku]
        $Sku
    )
    
    $Object = New-Object -TypeName Microsoft.PowerShell.AzPeering.v001.Models.Peering

    $PSBoundParameters.GetEnumerator() | ForEach-Object { 
        if(Get-Member -InputObject $Object -Name $_.Key -MemberType Property)
        {
            $Object.$($_.Key) = $_.Value
        }
    }

    if(Get-Member -InputObject $Object -Name Validate -MemberType Method)
    {
        $Object.Validate()
    }

    return $Object
}
